events {}

http {
  include mime.types;

  server {
    listen 80;
    listen [::]:80;

    location / {
      root /usr/share/nginx/html;
      index index.html index.htm;
      try_files $uri /index.html;
    }

    location /api {
      proxy_pass http://api:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_cache_bypass $http_upgrade;
      rewrite ^/api/(.*)$ /$1 break;

      add_header "Access-Control-Allow-Origin" "*";
      add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS";
      add_header "Access-Control-Allow-Headers" "Origin, Content-Type, Accept, Authorization";

      # Handle preflight requests
      if ($request_method = OPTIONS) {
        add_header "Access-Control-Allow-Origin" "*";
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS";
        add_header "Access-Control-Allow-Headers" "Origin, Content-Type, Accept, Authorization";
        add_header "Access-Control-Max-Age" 86400;
        add_header "Content-Length" 0;
        return 204;
      }
    }

    location /images {
      proxy_pass http://api:3000/images;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_cache_bypass $http_upgrade;
      rewrite ^/api/(.*)$ /$1 break;

      add_header "Access-Control-Allow-Origin" "*";
    }
  }
}
